// Prisma schema for PostgreSQL
// Update the provider and set up models for User, Project, Testimonial, Contact, ChatMessage, ImageClassification

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   @default("user")
  projects  Project[]
  testimonials Testimonial[]
  chatMessages ChatMessage[]
  imageClassifications ImageClassification[]
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  image       String
  tags        String[]
  githubUrl   String?
  liveUrl     String?
  user        User?    @relation(fields: [userId], references: [id])
  userId      Int?
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  name      String
  company   String?
  role      String?
  text      String
  image     String?
  approved  Boolean  @default(false)
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  message   String
  response  String
  createdAt DateTime @default(now())
}

model ImageClassification {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  imageUrl  String
  result    String
  createdAt DateTime @default(now())
}
